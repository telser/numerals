name:          numerals
version:       0.4.1
cabal-version: >= 1.9.2
build-type:    Simple
stability:     experimental
author:        Roel van Dijk <vandijk.roel@gmail.com>, Bas van Dijk <v.dijk.bas@gmail.com>
maintainer:    Roel van Dijk <vandijk.roel@gmail.com>
copyright:     2009–2014 Roel van Dijk, Bas van Dijk
license:       BSD3
license-file:  LICENSE
homepage:      https://github.com/roelvandijk/numerals
bug-reports:   https://github.com/roelvandijk/numerals/issues
category:      Natural Language Processing, Numerical, Text
synopsis:      Convert numbers to number words
description:
  Convert numbers to number words in a number of languages. Each
  language has its own module. The module name is based on the ISO
  639-3 code for that language. Each module contains one or more
  'cardinal' and 'ordinal' functions and a 'struct' function. The
  'cardinal' functions directly convert cardinal numbers to a
  string-like representation of their spoken form. The 'ordinal'
  functions do the same but for ordinal numbers. The 'struct'
  functions convert numbers to a polymorphic representation of their
  grammatical structure.
  .
  The use of this package is best understood with some examples. First
  some English number names, both British and US variants:
  .
  >>> import qualified Text.Numeral.Language.EN as EN
  >>> EN.uk_cardinal defaultInflection 123 :: Maybe Text
  Just "one hundred and twenty-three"
  >>> EN.us_cardinal defaultInflection (10^50 + 42) :: Maybe Text
  Just "one hundred quindecillion forty-two"
  .
  French, which contains some traces of a base 20 system:
  .
  >>> import qualified Text.Numeral.Language.FR as FR
  >>> FR.cardinal defaultInflection (-99) :: Maybe Text
  Just "moins quatre-vingt-dix-neuf"
  .
  Conversions can fail. Alamblak, a language spoken by a few people in
  Papua New Guinea, has no representation for negative numbers:
  .
  >>> import qualified Text.Numeral.Language.AMP as AMP
  >>> AMP.cardinal defaultInflection (-3) :: Maybe Text
  Nothing
  .
  Some languages have multiple scripts and methods for writing number
  names. Take Chinese for example, which can be written using Han
  characters or transcribed to the Latin script using Pinyin.
  .
  Traditional Chinese characters:
  .
  >>> import qualified Text.Numeral.Language.ZH as ZH
  >>> ZH.trad_cardinal defaultInflection 123456 :: Maybe Text
  Just "十二萬三千四百五十六"
  .
  Simplified characters for use in financial contexts:
  .
  >>> ZH.finance_simpl_cardinal defaultInflection 123456 :: Maybe Text
  Just "拾贰万参仟肆伯伍拾陆"
  .
  Transcribed using Pinyin:
  .
  >>> ZH.pinyin_cardinal defaultInflection 123456 :: Maybe Text
  Just "shíèrwàn sānqiān sìbǎi wǔshí liù"
  .
  Using the 'struct' functions you can see the grammatical structure
  of number names. Because the results of these functions are
  polymorphic you need to specify a specific type.
  .
  >>> import qualified Text.Numeral.Language.NL as NL
  >>> NL.struct 123 :: Integer
  123
  >>> import Text.Numeral
  >>> NL.struct 123 :: Exp
  Add (Lit 100) (Add (Lit 3) (Mul (Lit 2) (Lit 10)))
  .
  Compare with:
  .
  >>> NL.cardinal defaultInflection 123 :: Maybe Text
  Just "honderddrieëntwintig"
  .
  100 (honderd) + (3 (drie) + (ën) 2 (twin) * 10 (tig))

extra-source-files: ./README.markdown

-------------------------------------------------------------------------------

source-repository head
  Type: git
  Location: git://github.com/roelvandijk/numerals.git

-------------------------------------------------------------------------------

library
  hs-source-dirs: src
  ghc-options: -Wall

  build-depends: base                       >= 3.0.3.1 && < 5
               , base-unicode-symbols       >= 0.2.2   && < 0.3
               , containers                 >= 0.4     && < 0.6
               , containers-unicode-symbols >= 0.3     && < 0.4
               , fingertree                 >= 0.0.1   && < 0.2
               , text                       >= 0.11    && < 1.3

  if impl(ghc >= 7.2.1)
    build-depends: integer-gmp >= 0.3 && < 1.1

  exposed-modules: Text.Numeral
                 , Text.Numeral.BigNum
                 , Text.Numeral.Entry
                 , Text.Numeral.Exp
                 , Text.Numeral.Exp.Reified
                 , Text.Numeral.Grammar
                 , Text.Numeral.Grammar.Reified
                 , Text.Numeral.Misc
                 , Text.Numeral.Render
                 , Text.Numeral.Rules

                 , Text.Numeral.Language.Entries
                 , Text.Numeral.Language.AFR
                 , Text.Numeral.Language.AMP
                 , Text.Numeral.Language.BUL
                 , Text.Numeral.Language.CES
                 , Text.Numeral.Language.CHN
                 , Text.Numeral.Language.CHR
                 , Text.Numeral.Language.CLM
                 , Text.Numeral.Language.DEU
                 , Text.Numeral.Language.ENG
                 , Text.Numeral.Language.EPO
                 , Text.Numeral.Language.FIN
                 , Text.Numeral.Language.FRA
                 , Text.Numeral.Language.FUR
                 , Text.Numeral.Language.GLV
                 , Text.Numeral.Language.GSW
                 , Text.Numeral.Language.HEB
                 , Text.Numeral.Language.HOP
                 , Text.Numeral.Language.ITA
                 , Text.Numeral.Language.JPN
                 , Text.Numeral.Language.LAT
                 , Text.Numeral.Language.LLD
                 , Text.Numeral.Language.MLG
                 , Text.Numeral.Language.NEN
                 , Text.Numeral.Language.NLD
                 , Text.Numeral.Language.NOB
                 , Text.Numeral.Language.NQM
                 , Text.Numeral.Language.OJI
                 , Text.Numeral.Language.PDC
                 , Text.Numeral.Language.POL
                 , Text.Numeral.Language.POR
                 , Text.Numeral.Language.RUS
                 , Text.Numeral.Language.SCO
                 , Text.Numeral.Language.SPA
                 , Text.Numeral.Language.SWE
                 , Text.Numeral.Language.TUR
                 , Text.Numeral.Language.WOL
                 , Text.Numeral.Language.YOR
                 , Text.Numeral.Language.ZHO
  other-modules: Text.Numeral.Render.Utils


-------------------------------------------------------------------------------

test-suite test-numerals
  type: exitcode-stdio-1.0
  main-is: test.hs
  hs-source-dirs: src-test

  other-modules: Text.Numeral.Test

               , Text.Numeral.Language.ACH.TestData
               , Text.Numeral.Language.ADY.TestData
               , Text.Numeral.Language.AFR.TestData
               , Text.Numeral.Language.AMP.TestData
               , Text.Numeral.Language.ARI.TestData
               , Text.Numeral.Language.ARN.TestData
               , Text.Numeral.Language.AST.TestData
               , Text.Numeral.Language.AZE.TestData
               , Text.Numeral.Language.BAK.TestData
               , Text.Numeral.Language.BAM.TestData
               , Text.Numeral.Language.BUL.TestData
               , Text.Numeral.Language.CAF.TestData
               , Text.Numeral.Language.CAR.TestData
               , Text.Numeral.Language.CAT.TestData
               , Text.Numeral.Language.CBK.TestData
               , Text.Numeral.Language.CES.TestData
               , Text.Numeral.Language.CHN.TestData
               , Text.Numeral.Language.CHR.TestData
               , Text.Numeral.Language.CKU.TestData
               , Text.Numeral.Language.CLM.TestData
               , Text.Numeral.Language.COD.TestData
               , Text.Numeral.Language.COO.TestData
               , Text.Numeral.Language.COS.TestData
               , Text.Numeral.Language.CRG.TestData
               , Text.Numeral.Language.CYM.TestData
               , Text.Numeral.Language.DEU.TestData
               , Text.Numeral.Language.DJK.TestData
               , Text.Numeral.Language.EKK.TestData
               , Text.Numeral.Language.EMI.TestData
               , Text.Numeral.Language.ENG.TestData
               , Text.Numeral.Language.EPO.TestData
               , Text.Numeral.Language.FAO.TestData
               , Text.Numeral.Language.FIN.TestData
               , Text.Numeral.Language.FRA.TestData
               , Text.Numeral.Language.FRA_JER.TestData
               , Text.Numeral.Language.FRR.TestData
               , Text.Numeral.Language.FUR.TestData
               , Text.Numeral.Language.GCF_MTQ.TestData
               , Text.Numeral.Language.GIL.TestData
               , Text.Numeral.Language.GLG.TestData
               , Text.Numeral.Language.GLV.TestData
               , Text.Numeral.Language.GSW.TestData
               , Text.Numeral.Language.HAI.TestData
               , Text.Numeral.Language.HAT.TestData
               , Text.Numeral.Language.HEB.TestData
               , Text.Numeral.Language.HOP.TestData
               , Text.Numeral.Language.HRV.TestData
               , Text.Numeral.Language.HUN.TestData
               , Text.Numeral.Language.HUP.TestData
               , Text.Numeral.Language.HUR.TestData
               , Text.Numeral.Language.HYE.TestData
               , Text.Numeral.Language.IBO.TestData
               , Text.Numeral.Language.IND.TestData
               , Text.Numeral.Language.INH.TestData
               , Text.Numeral.Language.ITA.TestData
               , Text.Numeral.Language.IZH.TestData
               , Text.Numeral.Language.JPN.TestData
               , Text.Numeral.Language.KAP.TestData
               , Text.Numeral.Language.KEA.TestData
               , Text.Numeral.Language.KLB.TestData
               , Text.Numeral.Language.KMR.TestData
               , Text.Numeral.Language.KRL.TestData
               , Text.Numeral.Language.LAT.TestData
               , Text.Numeral.Language.LAV.TestData
               , Text.Numeral.Language.LIN.TestData
               , Text.Numeral.Language.LIT.TestData
               , Text.Numeral.Language.LIV.TestData
               , Text.Numeral.Language.LLD.TestData
               , Text.Numeral.Language.LMO.TestData
               , Text.Numeral.Language.LTZ.TestData
               , Text.Numeral.Language.MIC.TestData
               , Text.Numeral.Language.MIN.TestData
               , Text.Numeral.Language.MLG.TestData
               , Text.Numeral.Language.MNK.TestData
               , Text.Numeral.Language.MOH.TestData
               , Text.Numeral.Language.NAV.TestData
               , Text.Numeral.Language.NEE.TestData
               , Text.Numeral.Language.NEN.TestData
               , Text.Numeral.Language.NLD.TestData
               , Text.Numeral.Language.NOB.TestData
               , Text.Numeral.Language.NQM.TestData
               , Text.Numeral.Language.OCI.TestData
               , Text.Numeral.Language.OJI.TestData
               , Text.Numeral.Language.ONE.TestData
               , Text.Numeral.Language.ORM.TestData
               , Text.Numeral.Language.PAA.TestData
               , Text.Numeral.Language.PDC.TestData
               , Text.Numeral.Language.POL.TestData
               , Text.Numeral.Language.POR.TestData
               , Text.Numeral.Language.RMN_DZA.TestData
               , Text.Numeral.Language.RMY_KAL.TestData
               , Text.Numeral.Language.RON.TestData
               , Text.Numeral.Language.RUS.TestData
               , Text.Numeral.Language.SCO.TestData
               , Text.Numeral.Language.SME.TestData
               , Text.Numeral.Language.SMN.TestData
               , Text.Numeral.Language.SPA.TestData
               , Text.Numeral.Language.SWE.TestData
               , Text.Numeral.Language.TAR.TestData
               , Text.Numeral.Language.TGS.TestData
               , Text.Numeral.Language.TUR.TestData
               , Text.Numeral.Language.WMW.TestData
               , Text.Numeral.Language.WOL.TestData
               , Text.Numeral.Language.XPQ.TestData
               , Text.Numeral.Language.YOR.TestData
               , Text.Numeral.Language.ZAI.TestData
               , Text.Numeral.Language.ZAQ.TestData
               , Text.Numeral.Language.ZHO.TestData
               , Text.Numeral.Language.ZPC.TestData
               , Text.Numeral.Language.ZPL.TestData
  ghc-options: -Wall -threaded -rtsopts -with-rtsopts=-N

  build-depends: base                       >= 3.0.3.1 && < 5
               , base-unicode-symbols       >= 0.2.2   && < 0.3
               , HUnit                      >= 1.2.2  
               , QuickCheck                 >= 2.4.2  
               , test-framework             >= 0.3.3   
               , test-framework-hunit       >= 0.2.6   
               , test-framework-quickcheck2 >= 0.2.12  
               , text                       >= 0.11    && < 1.4
               , numerals

  if impl(ghc >= 7.2.1)
    build-depends: integer-gmp >= 0.3 && < 1.1

-------------------------------------------------------------------------------

benchmark bench-numerals
  type: exitcode-stdio-1.0
  main-is: bench.hs
  hs-source-dirs: src-bench

  build-depends: base                 >= 3.0.3.1 && < 4.7
               , base-unicode-symbols >= 0.2.2   && < 0.3
               , criterion            >= 0.8     && < 0.9
               , numerals
